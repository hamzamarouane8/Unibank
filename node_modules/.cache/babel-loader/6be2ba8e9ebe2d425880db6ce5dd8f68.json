{"ast":null,"code":"import axios from 'axios';\nvar instanceAuth = axios.create({\n  baseURL: 'http://localhost:9090/api/v1/auth'\n});\nvar instanceAccount = axios.create({\n  baseURL: 'http://localhost:7070/api/v1/accounts'\n});\nvar instancelocations = axios.create({\n  baseURL: 'http://localhost:8090/api/v1/branches'\n});\nvar instanceVirement = axios.create({\n  baseURL: 'http://localhost:6060/api/v1/transfer'\n});\nvar instanceOperations = axios.create({\n  baseURL: 'http://localhost:5050/api/v1'\n});\nvar instanceBeneficiary = axios.create({\n  baseURL: 'http://localhost:8080/api/v1/beneficiary'\n});\nvar instanceCheckbook = axios.create({\n  baseURL: 'http://localhost:6162/api/v1/checkbook-orders'\n});\nvar BOUCHON = true;\n\nvar mapAuthError = function mapAuthError(message) {\n  if (message != null && message === 'errors.no.credentials') {\n    return \"login or password is empty.\";\n  } else if (message != null && message === 'AUTH02') {\n    return \"veuillez vérifier votre identifiant et/ou mot de passe\";\n  } else if (message != null && message === 'AUTH03') {\n    return 'veuillez vérifier votre identifiant et/ou mot de passe';\n  } else if (message != null && message === 'AUTH01') {\n    return \"mot de passe incorrect. A la troisiéme saisie erronée votre compte sera bloqué\";\n  } else if (message != null && message === 'AUTH04') {\n    return \"vous avez saisit trois fois de suite un mauvais mot de passe. Votre compte et bloqué , veuillez contacter le centre de service client\";\n  }\n\n  return \"Erreur d'authentification\";\n};\n\nvar mapBeneficiaryError = function mapBeneficiaryError(message) {\n  if (message != null && message === 'errors.beneficiary.customernumber.invalid') {\n    return \"veuillez vérifier votre id.\";\n  } else if (message != null && message === 'errors.beneficiary.beneficiaryrib.invalid') {\n    return \"veuillez vérifier votre Rib.\";\n  } else if (message != null && message === 'errors.beneficiary.firstname.invalid') {\n    return 'veuillez vérifier votre prenom';\n  } else if (message != null && message === 'errors.beneficiary.name.invalid') {\n    return \"veuillez vérifier votre nom\";\n  } else if (message != null && message === 'errors.beneficiary.notfound') {\n    return \"Le rib que vous avez saisi est introuvable dans notre base de données.\";\n  } else if (message != null && message === 'errors.beneficiary.beneficiaryaccountid.invalid') {\n    return \"veuillez vérifier votre numero de compte.\";\n  }\n\n  return \"Erreur de la gestion beneficifiare\";\n};\n\nvar mapVirementError = function mapVirementError(message) {\n  if (message != null && message === 'error.transfer.amount.invalid') {\n    return \"Le montant saisi est invalide.\";\n  } else if (message != null && message === 'error.transfer.scheduledat.invalid') {\n    return \"La date choisie est Invalide.\";\n  } else if (message != null && message === 'error.transfer.account.invalid') {\n    return \"Le numéro de compte est Invalid.\";\n  } else if (message != null && message === 'error.transfer.scheduleduntil.invalid') {\n    return \"La date fin est Invalide.\";\n  } else if (message != null && message === 'error.transfer.beneficiaryrib.invalid') {\n    return \"Le RIB bénéficiaire est Invalide.\";\n  } else if (message != null && message === 'error.transfer.insufficient.funds') {\n    return \"Le montant de votre virement dépasse le solde de votre compte  \";\n  }\n\n  return \"Erreur de Virement\";\n};\n\nexport var login = function login(_ref) {\n  var username = _ref.username,\n      password = _ref.password;\n\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      if (username === '12345678' && password === '123456') {\n        resolve({\n          id: 1,\n          token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMTExMTExMSIsIm1haWwiOiJyZWRhQGFkYXJpLmZyIiwidXNlcm5hbWUiOiIxMTExMTExMSJ9.AK_A4POrInL5BB8C65qHExRI5ZGAB-_E1XMkzusH7PY'\n        });\n      } else {\n        reject(new Error('errors.password.not.valid'));\n      }\n    });\n  } else {\n    return instanceAuth.post('/', {\n      username: username,\n      password: password\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(mapAuthError(err.response.data.error));\n      }\n\n      throw err;\n    });\n  }\n};\nexport var geoList = function geoList() {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var latitude = true;\n\n      if (latitude) {\n        resolve({\n          \"dabs\": [{\n            dabId: \"11111111\",\n            name: \"Guichets automatique\",\n            address: {\n              country: \"Cameroun\",\n              locality: \"Yaoundé\",\n              region: \"CENTRE\",\n              postalCode: \"98052\",\n              streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n            },\n            status: \"ACTIVE\",\n            services: \"Guichets automatique multifonction;Western Union\",\n            longitude: \"-7.578313\",\n            latitude: \"33.575453\"\n          }, {\n            dabId: \"11111112\",\n            name: \"Guichets automatique\",\n            address: {\n              country: \"Cameroun\",\n              locality: \"Yaoundé\",\n              region: \"CENTRE\",\n              postalCode: \"98052\",\n              streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n            },\n            status: \"ACTIVE\",\n            services: \"Guichets automatique multifonction;Western Union\",\n            longitude: \"-7.56629\",\n            latitude: \"33.5925\"\n          }, {\n            dabId: \"11111113\",\n            name: \"Guichets automatique\",\n            address: {\n              country: \"Cameroun\",\n              locality: \"Yaoundé\",\n              region: \"CENTRE\",\n              postalCode: \"98052\",\n              streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n            },\n            status: \"ACTIVE\",\n            services: \"Guichets automatique multifonction;Western Union\",\n            longitude: \"-7.56686\",\n            latitude: \"33.58582\"\n          }, {\n            dabId: \"11111114\",\n            name: \"Guichets automatique\",\n            address: {\n              country: \"Cameroun\",\n              locality: \"Yaoundé\",\n              region: \"CENTRE\",\n              postalCode: \"98052\",\n              streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n            },\n            status: \"ACTIVE\",\n            services: \"Guichets automatique multifonction;Western Union\",\n            longitude: \"-7.57571\",\n            latitude: \"33.58558\"\n          }, {\n            dabId: \"11111115\",\n            name: \"Guichets automatique\",\n            address: {\n              country: \"Cameroun\",\n              locality: \"Yaoundé\",\n              region: \"CENTRE\",\n              postalCode: \"98052\",\n              streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n            },\n            status: \"ACTIVE\",\n            services: \"Guichets automatique multifonction;Western Union\",\n            longitude: \"-7.548406\",\n            latitude: \"33.583198\"\n          }, {\n            dabId: \"22222221\",\n            name: \"Guichets automatique\",\n            address: {\n              country: \"Ghana\",\n              locality: \"Adabraka\",\n              region: \"Grand Accra\",\n              postalCode: \"3920\",\n              streetAddress: \"Kwame Nkrumah Avenue, Near Adabraka Police Station\"\n            },\n            status: \"ACTIVE\",\n            services: \"Guichets automatique multifonction;Western Union\",\n            longitude: \"-7.572124\",\n            latitude: \"33.580202\"\n          }]\n        });\n      } else {\n        reject(new Error('errors.password.not.valid'));\n      }\n    });\n  } else {\n    return instancelocations.get('/').then(function (response) {\n      return response.data;\n    });\n  }\n};\nexport var virement = function virement(data, token) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = false;\n\n      if (valid) {\n        resolve({\n          accountId: '',\n          details: [{\n            beneficiaryRIB: '',\n            amount: '',\n            reason: ''\n          }],\n          reason: '',\n          scheduledAt: '',\n          scheduledUntil: ''\n        });\n      } else {\n        reject(new Error('amout is not valid'));\n      }\n    });\n  } else {\n    var dataInput = {\n      accountId: data.accountTransmitter,\n      details: [{\n        beneficiaryRIB: data.accountReceiver,\n        amount: data.amount,\n        reason: data.pattern\n      }],\n      reason: data.pattern,\n      scheduledAt: data.date_vir,\n      scheduledUntil: ''\n    };\n    return instanceVirement.post('/', dataInput, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(mapVirementError(err.response.data.message));\n      }\n\n      throw err;\n    });\n  }\n};\nexport var accounts = function accounts(token) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        return resolve({\n          accounts: [{\n            accountId: \"3601236547893232\",\n            iban: \"7.780360123654789E21\",\n            name: \"REDA ADARI\",\n            details: \"DB\",\n            plafond: 1500,\n            linkedAccount: \"7.780360123654755E21\",\n            usage: \"DB\",\n            cashAccountType: \"Compte Cheque\",\n            currency: \"MAD\",\n            product: \"GOLD\",\n            psuStatus: \"A\",\n            customerNumber: \"11111111\",\n            stoppageStatus: \"CLOSE\",\n            availableBalance: 25000000,\n            ibanAccountKey: \"500\",\n            branchCode: \"780\",\n            balances: [{\n              balanceId: 111,\n              accountId: \"3601236547893232\",\n              name: \"REDA ADARI\",\n              amount: 25000000,\n              currency: \"MAD\",\n              balanceType: \"CR\",\n              lastCommitedTransaction: \"5321\",\n              lastChangeDateTime: \"2016-11-16T00:00:00.000+0000\",\n              referenceDate: \"2016-11-16T00:00:00.000+0000\"\n            }]\n          }, {\n            accountId: \"36012987458932321\",\n            iban: \"7.560360129874589E21\",\n            name: \"Issam Louhman\",\n            details: \"CR\",\n            plafond: 1500,\n            linkedAccount: \"7.780360123654789E21\",\n            usage: \"DB\",\n            cashAccountType: \"Compte courant\",\n            currency: \"MAD\",\n            product: \"GOLD\",\n            psuStatus: \"A\",\n            customerNumber: \"11111111\",\n            stoppageStatus: \"CLOSE\",\n            availableBalance: 1400,\n            ibanAccountKey: \"700\",\n            branchCode: \"560\",\n            balances: [{\n              balanceId: 112,\n              accountId: \"3601298745893232\",\n              name: \"REDA ADARI\",\n              amount: 30000,\n              currency: \"EUR\",\n              balanceType: \"CR\",\n              lastCommitedTransaction: \"5521\",\n              lastChangeDateTime: \"2016-11-18T00:00:00.000+0000\",\n              referenceDate: \"2016-11-16T00:00:00.000+0000\"\n            }]\n          }, {\n            accountId: \"3601236547893232099\",\n            iban: \"7.780360123654789E767676721\",\n            name: \"REDA ADARI\",\n            details: \"CR\",\n            linkedAccount: \"7.780360123654755E21\",\n            usage: \"DB\",\n            plafond: 1500,\n            cashAccountType: \"Compte courant\",\n            currency: \"MAD\",\n            product: \"GOLD\",\n            psuStatus: \"A\",\n            customerNumber: \"11111111\",\n            stoppageStatus: \"CLOSE\",\n            availableBalance: 900000,\n            ibanAccountKey: \"500\",\n            branchCode: \"780\",\n            balances: [{\n              balanceId: 111,\n              accountId: \"3601236547893232\",\n              name: \"REDA ADARI\",\n              amount: 25000000,\n              currency: \"MAD\",\n              balanceType: \"CR\",\n              lastCommitedTransaction: \"5321\",\n              lastChangeDateTime: \"2016-11-16T00:00:00.000+0000\",\n              referenceDate: \"2016-11-16T00:00:00.000+0000\"\n            }]\n          }, {\n            accountId: \"360129874589323245\",\n            iban: \"7.560360129874589E21678\",\n            name: \"Issam Louhman\",\n            details: \"CR\",\n            linkedAccount: \"7.780360123654789E21\",\n            usage: \"CR\",\n            plafond: 1500,\n            cashAccountType: \"Compte courant\",\n            currency: \"MAD\",\n            product: \"GOLD\",\n            psuStatus: \"A\",\n            customerNumber: \"11111111\",\n            stoppageStatus: \"CLOSE\",\n            availableBalance: 3008900,\n            ibanAccountKey: \"700\",\n            branchCode: \"560\",\n            balances: [{\n              balanceId: 112,\n              accountId: \"3601298745893232\",\n              name: \"REDA ADARI\",\n              amount: 30000,\n              currency: \"EUR\",\n              balanceType: \"CR\",\n              lastCommitedTransaction: \"5521\",\n              lastChangeDateTime: \"2016-11-18T00:00:00.000+0000\",\n              referenceDate: \"2016-11-16T00:00:00.000+0000\"\n            }]\n          }]\n        });\n      } else {\n        reject(new Error('errors.password.not.valid'));\n      }\n    });\n  } else {\n    return instanceAccount.get('/', {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.data;\n    });\n  }\n};\nexport var historyById = function historyById(token, accountId) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        return resolve({\n          operations: [{\n            test: accountId,\n            operationId: \"3601236547893232\",\n            name: \"Caffee Latte- Starbucks\",\n            date: \"20/07/2018\",\n            dateVal: \"20/07/2018\",\n            timeExact: \"08:15\",\n            balance: \"35.50\",\n            currency: \"MAD\"\n          }, {\n            test: accountId,\n            operationId: \"3601236547893232\",\n            name: \"Paiement des factures d'éléctricité de l'ONEE\",\n            date: \"20/07/2018\",\n            dateVal: \"20/07/2018\",\n            timeExact: \"20:40\",\n            balance: \"322.10\",\n            currency: \"MAD\"\n          }, {\n            test: accountId,\n            operationId: \"3601236547893232\",\n            name: \"Apple iSpot - Iphone X\",\n            date: \"20/08/2018\",\n            dateVal: \"20/07/2018\",\n            timeExact: \"15:10\",\n            balance: \"1050.64\",\n            currency: \"MAD\"\n          }, {\n            test: accountId,\n            operationId: \"3601236547893232\",\n            name: \"Netflix - dashboard design\",\n            date: \"20/09/2018\",\n            dateVal: \"20/07/2018\",\n            timeExact: \"23:36\",\n            balance: \"105.90\",\n            currency: \"MAD\"\n          }]\n        });\n      } else {\n        reject(new Error('errors.password.not.valid'));\n      }\n    });\n  } else {\n    var operationId = '/' + accountId + '/operations';\n    return instanceOperations.get(operationId, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.data;\n    });\n  }\n};\nexport var beneficiaires = function beneficiaires(token) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        return resolve({\n          beneficiaries: [{\n            beneficiaryRIB: \"147852369987456321456987\",\n            beneficiaryName: \"BENALI AHMED\",\n            beneficiaryFirstName: \"Ahmed\",\n            tel: \"06100532325\",\n            business: false\n          }, {\n            beneficiaryRIB: \"159951159951147856987412\",\n            beneficiaryName: \"HAMZA MAROUANE\",\n            beneficiaryFirstName: \"Hamza\",\n            tel: \"0661059898\",\n            business: false\n          }]\n        });\n      } else {\n        reject(new Error(''));\n      }\n    });\n  } else {\n    return instanceBeneficiary.get('/beneficiaries', {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(mapBeneficiaryError(err.response.data.message));\n      }\n\n      throw err;\n    });\n  }\n};\nexport var addBeneficiairy = function addBeneficiairy(user, data) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        resolve({\n          beneficiaryRIB: \"147852369987456321456987\",\n          beneficiaryName: \"BENALI AHMED\",\n          beneficiaryFirstName: \"Ahmed\",\n          tel: \"06100532325\",\n          business: false\n        });\n      } else {\n        reject(new Error(''));\n      }\n    });\n  } else {\n    var dataInput = {\n      customerNumber: user.id,\n      accountId: data.toggleSG ? data.numAccount : null,\n      beneficiaryRIB: !data.toggleSG ? data.rib : null,\n      beneficiaryName: data.typeBeneficiary === 'Personne Physique' ? data.lname : data.raison,\n      beneficiaryFirstName: data.fname,\n      tel: \"\",\n      business: data.typeBeneficiary === 'Personne Physique' ? false : true\n    };\n    return instanceBeneficiary.post('/add', dataInput, {\n      headers: {\n        Authorization: 'Bearer ' + user.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(mapBeneficiaryError(err.response.data.message));\n      }\n\n      throw err;\n    });\n  }\n};\nexport var deleteBeneficiairy = function deleteBeneficiairy(token, listBeneficiaries) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      console.log('data final', listBeneficiaries);\n      var valid = true;\n\n      if (valid) {\n        resolve({\n          beneficiaryRIB: \"147852369987456321456987\"\n        });\n      } else {\n        reject(new Error(''));\n      }\n    });\n  } else {\n    var dataInput = {\n      beneficiaryRIB: listBeneficiaries\n    };\n    return instanceBeneficiary.post('/delete', dataInput, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(mapBeneficiaryError(err.response.data.message));\n      }\n\n      throw err;\n    });\n  }\n};\nexport var chequebooks = function chequebooks(token, accountId) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        return resolve({\n          checkBookOrders: [{\n            ckeckBookOrderId: \"11111111\",\n            orderDate: \"2011-01-18 00:00:00.0\",\n            type: \"cheque normal\",\n            accountId: \"3601236547893232\",\n            capacity: \"40 sheet\",\n            archived: false,\n            status: \"pending\"\n          }, {\n            ckeckBookOrderId: \"22222222\",\n            orderDate: \"2011-01-18 00:00:00.0\",\n            type: \"cheque normal\",\n            accountId: \"36012987458932321\",\n            capacity: \"40 sheet\",\n            archived: false,\n            status: \"pending\"\n          }, {\n            ckeckBookOrderId: \"33333333\",\n            orderDate: \"2011-01-18 00:00:00.0\",\n            type: \"cheque normal\",\n            accountId: \"1234567\",\n            capacity: \"20 sheet\",\n            archived: false,\n            status: \"success\"\n          }],\n          checkbookOrder: null\n        });\n      } else {\n        reject(new Error('error'));\n      }\n    });\n  } else {\n    return instanceCheckbook.get(\"/list\", {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(err.response);\n      }\n\n      throw err;\n    });\n  }\n};\nexport var addChequebook = function addChequebook(user, data) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        resolve({});\n      } else {\n        reject(new Error('error'));\n      }\n    });\n  } else {\n    var dataInput = {\n      accountId: data.accountChequebook,\n      type: data.type,\n      capacity: data.typepages\n    };\n    console.log('data', dataInput);\n    return instanceCheckbook.post('/add', dataInput, {\n      headers: {\n        Authorization: 'Bearer ' + user.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(err.response);\n      }\n\n      throw err;\n    });\n  }\n};\nexport var cancelChequebook = function cancelChequebook(user, checkbookId) {\n  if (BOUCHON) {\n    return new Promise(function (resolve, reject) {\n      var valid = true;\n\n      if (valid) {\n        resolve({});\n      } else {\n        reject(new Error('error'));\n      }\n    });\n  } else {\n    return instanceCheckbook.get(\"/\".concat(checkbookId, \"/cancel\"), {\n      headers: {\n        Authorization: 'Bearer ' + user.token\n      }\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (err) {\n      if (err.response) {\n        throw new Error(err.response);\n      }\n\n      throw err;\n    });\n  }\n};","map":{"version":3,"sources":["C:\\Users\\DIT\\Desktop\\Nouveau dossier (4)\\unibank-web\\src\\app\\api.js"],"names":["axios","instanceAuth","create","baseURL","instanceAccount","instancelocations","instanceVirement","instanceOperations","instanceBeneficiary","instanceCheckbook","BOUCHON","mapAuthError","message","mapBeneficiaryError","mapVirementError","login","username","password","Promise","resolve","reject","id","token","Error","post","then","response","data","catch","err","error","geoList","latitude","dabId","name","address","country","locality","region","postalCode","streetAddress","status","services","longitude","get","virement","valid","accountId","details","beneficiaryRIB","amount","reason","scheduledAt","scheduledUntil","dataInput","accountTransmitter","accountReceiver","pattern","date_vir","headers","Authorization","accounts","iban","plafond","linkedAccount","usage","cashAccountType","currency","product","psuStatus","customerNumber","stoppageStatus","availableBalance","ibanAccountKey","branchCode","balances","balanceId","balanceType","lastCommitedTransaction","lastChangeDateTime","referenceDate","historyById","operations","test","operationId","date","dateVal","timeExact","balance","beneficiaires","beneficiaries","beneficiaryName","beneficiaryFirstName","tel","business","addBeneficiairy","user","toggleSG","numAccount","rib","typeBeneficiary","lname","raison","fname","deleteBeneficiairy","listBeneficiaries","console","log","chequebooks","checkBookOrders","ckeckBookOrderId","orderDate","type","capacity","archived","checkbookOrder","addChequebook","accountChequebook","typepages","cancelChequebook","checkbookId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst instanceAuth = axios.create({baseURL: 'http://localhost:9090/api/v1/auth'});\nconst instanceAccount = axios.create({baseURL: 'http://localhost:7070/api/v1/accounts'});\nconst instancelocations = axios.create({baseURL: 'http://localhost:8090/api/v1/branches'});\nconst instanceVirement = axios.create({baseURL: 'http://localhost:6060/api/v1/transfer'});\nconst instanceOperations = axios.create({baseURL: 'http://localhost:5050/api/v1'});\nconst instanceBeneficiary = axios.create({baseURL: 'http://localhost:8080/api/v1/beneficiary'});\nconst instanceCheckbook = axios.create({baseURL: 'http://localhost:6162/api/v1/checkbook-orders'});\n\nconst BOUCHON = true\n\nconst mapAuthError = (message) => {\n  if (message != null && message === 'errors.no.credentials') {\n    return \"login or password is empty.\"\n  } else if (message != null && message === 'AUTH02') {\n    return \"veuillez vérifier votre identifiant et/ou mot de passe\"\n  } else if (message != null && message === 'AUTH03') {\n    return 'veuillez vérifier votre identifiant et/ou mot de passe';\n  } else if (message != null && message === 'AUTH01') {\n    return \"mot de passe incorrect. A la troisiéme saisie erronée votre compte sera bloqué\"\n  } else if (message != null && message === 'AUTH04') {\n    return \"vous avez saisit trois fois de suite un mauvais mot de passe. Votre compte et bloqué , veuillez contacter le centre de service client\"\n  }\n  return \"Erreur d'authentification\"\n}\nconst mapBeneficiaryError = (message) => {\n  if (message != null && message === 'errors.beneficiary.customernumber.invalid') {\n    return \"veuillez vérifier votre id.\"\n  } else if (message != null && message === 'errors.beneficiary.beneficiaryrib.invalid') {\n    return \"veuillez vérifier votre Rib.\"\n  } else if (message != null && message === 'errors.beneficiary.firstname.invalid') {\n    return 'veuillez vérifier votre prenom';\n  } else if (message != null && message === 'errors.beneficiary.name.invalid') {\n    return \"veuillez vérifier votre nom\"\n  } else if (message != null && message === 'errors.beneficiary.notfound') {\n    return \"Le rib que vous avez saisi est introuvable dans notre base de données.\"\n  } else if (message != null && message === 'errors.beneficiary.beneficiaryaccountid.invalid') {\n    return \"veuillez vérifier votre numero de compte.\"\n  }\n\n  return \"Erreur de la gestion beneficifiare\"\n}\nconst mapVirementError = (message) => {\n  if (message != null && message === 'error.transfer.amount.invalid') {\n    return \"Le montant saisi est invalide.\"\n  } else if (message != null && message === 'error.transfer.scheduledat.invalid') {\n    return \"La date choisie est Invalide.\"\n  } else if (message != null && message === 'error.transfer.account.invalid') {\n    return \"Le numéro de compte est Invalid.\"\n  }else if (message != null && message === 'error.transfer.scheduleduntil.invalid') {\n    return \"La date fin est Invalide.\"\n  } else if (message != null && message === 'error.transfer.beneficiaryrib.invalid') {\n    return \"Le RIB bénéficiaire est Invalide.\"\n  }else if (message != null && message === 'error.transfer.insufficient.funds') {\n    return \"Le montant de votre virement dépasse le solde de votre compte  \"\n  }\nreturn \"Erreur de Virement\"\n}\n\nexport const login = ({username, password}) => {\n\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      if (username === '12345678' && password === '123456') {\n        resolve({\n          id: 1,\n          token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMTExMTExMSIsIm1haWwiOiJyZWRhQGFkYXJpLmZyIiwidXNlcm5hbWUiOiIxMTExMTExMSJ9.AK_A4POrInL5BB8C65qHExRI5ZGAB-_E1XMkzusH7PY'\n        })\n      } else {\n        reject(new Error('errors.password.not.valid'))\n      }\n    })\n  } else {\n    return instanceAuth.post('/', {username, password}).then((response) => {\n      return response.data\n    }).catch((err) => {\n      if (err.response) {\n        throw new Error(mapAuthError(err.response.data.error))\n      }\n      throw err;\n    })\n  }\n}\n\nexport const geoList = ()  =>{\n  if(BOUCHON){\n    return new Promise((resolve,reject) =>{\n      var latitude =true\n      if(latitude){\n        resolve({\n            \"dabs\": [\n              {\n                dabId: \"11111111\",\n                name: \"Guichets automatique\",\n                address: {\n                  country: \"Cameroun\",\n                  locality: \"Yaoundé\",\n                  region: \"CENTRE\",\n                  postalCode: \"98052\",\n                  streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n                },\n                status: \"ACTIVE\",\n                services: \"Guichets automatique multifonction;Western Union\",\n                longitude: \"-7.578313\",\n                latitude: \"33.575453\"\n              },\n              {\n                dabId: \"11111112\",\n                name: \"Guichets automatique\",\n                address: {\n                  country: \"Cameroun\",\n                  locality: \"Yaoundé\",\n                  region: \"CENTRE\",\n                  postalCode: \"98052\",\n                  streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n                },\n                status: \"ACTIVE\",\n                services: \"Guichets automatique multifonction;Western Union\",\n                longitude: \"-7.56629\",\n                latitude: \"33.5925\"\n              },{\n                dabId: \"11111113\",\n                name: \"Guichets automatique\",\n                address: {\n                  country: \"Cameroun\",\n                  locality: \"Yaoundé\",\n                  region: \"CENTRE\",\n                  postalCode: \"98052\",\n                  streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n                },\n                status: \"ACTIVE\",\n                services: \"Guichets automatique multifonction;Western Union\",\n                longitude: \"-7.56686\",\n                latitude: \"33.58582\"\n              },\n              {\n                dabId: \"11111114\",\n                name: \"Guichets automatique\",\n                address: {\n                  country: \"Cameroun\",\n                  locality: \"Yaoundé\",\n                  region: \"CENTRE\",\n                  postalCode: \"98052\",\n                  streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n                },\n                status: \"ACTIVE\",\n                services: \"Guichets automatique multifonction;Western Union\",\n                longitude: \"-7.57571\",\n                latitude: \"33.58558\"\n              },\n              {\n                dabId: \"11111115\",\n                name: \"Guichets automatique\",\n                address: {\n                  country: \"Cameroun\",\n                  locality: \"Yaoundé\",\n                  region: \"CENTRE\",\n                  postalCode: \"98052\",\n                  streetAddress: \"Ancien palais presidentiel. BP 12 798\"\n                },\n                status: \"ACTIVE\",\n                services: \"Guichets automatique multifonction;Western Union\",\n                longitude: \"-7.548406\",\n                latitude: \"33.583198\"\n              },\n              {\n                dabId: \"22222221\",\n                name: \"Guichets automatique\",\n                address: {\n                  country: \"Ghana\",\n                  locality: \"Adabraka\",\n                  region: \"Grand Accra\",\n                  postalCode: \"3920\",\n                  streetAddress: \"Kwame Nkrumah Avenue, Near Adabraka Police Station\"\n                },\n                status: \"ACTIVE\",\n                services: \"Guichets automatique multifonction;Western Union\",\n                longitude: \"-7.572124\",\n                latitude: \"33.580202\"\n              }\n            ]\n          }\n\n        )\n      }else{\n        reject(new Error('errors.password.not.valid'))\n      }\n    })\n  }else{\n    return  instancelocations.get('/')\n      .then((response) =>  {\n        return response.data\n      })\n\n  }\n}\n\nexport const virement = (data,token) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =false\n      if (valid) {\n        resolve({accountId: '', details :[{beneficiaryRIB:'',amount:'',reason:''}] ,reason:'',scheduledAt\t:'',scheduledUntil:''})\n      } else {\n        reject(new Error('amout is not valid'))\n      }\n    })\n  } else {\n    let dataInput ={accountId: data.accountTransmitter, details :[{beneficiaryRIB:data.accountReceiver,amount:data.amount,reason:data.pattern}] ,reason:data.pattern,scheduledAt\t:data.date_vir,scheduledUntil:''}\n    return instanceVirement.post('/',dataInput, {headers: {Authorization: 'Bearer ' + token}}  ).then((response) => {\n      return response.data\n    }).catch((err) => {\n      if (err.response) {\n        throw new Error(mapVirementError(err.response.data.message))\n      }\n      throw err;\n    })\n  }\n}\n\nexport const accounts = (token) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n      return  resolve({accounts: [\n            {\n              accountId: \"3601236547893232\",\n              iban: \"7.780360123654789E21\",\n              name: \"REDA ADARI\",\n              details: \"DB\",\n              plafond:1500,\n              linkedAccount: \"7.780360123654755E21\",\n              usage: \"DB\",\n              cashAccountType: \"Compte Cheque\",\n              currency: \"MAD\",\n              product: \"GOLD\",\n              psuStatus: \"A\",\n              customerNumber: \"11111111\",\n              stoppageStatus: \"CLOSE\",\n              availableBalance: 25000000,\n              ibanAccountKey: \"500\",\n              branchCode: \"780\",\n              balances: [\n                {\n                  balanceId: 111,\n                  accountId: \"3601236547893232\",\n                  name: \"REDA ADARI\",\n                  amount: 25000000,\n                  currency: \"MAD\",\n                  balanceType: \"CR\",\n                  lastCommitedTransaction: \"5321\",\n                  lastChangeDateTime: \"2016-11-16T00:00:00.000+0000\",\n                  referenceDate: \"2016-11-16T00:00:00.000+0000\"\n                }\n              ]\n            },\n            {\n              accountId: \"36012987458932321\",\n              iban: \"7.560360129874589E21\",\n              name: \"Issam Louhman\",\n              details: \"CR\",\n              plafond:1500,\n              linkedAccount: \"7.780360123654789E21\",\n              usage: \"DB\",\n              cashAccountType: \"Compte courant\",\n              currency: \"MAD\",\n              product: \"GOLD\",\n              psuStatus: \"A\",\n              customerNumber: \"11111111\",\n              stoppageStatus: \"CLOSE\",\n              availableBalance: 1400,\n              ibanAccountKey: \"700\",\n              branchCode: \"560\",\n              balances: [\n                {\n                  balanceId: 112,\n                  accountId: \"3601298745893232\",\n                  name: \"REDA ADARI\",\n                  amount: 30000,\n                  currency: \"EUR\",\n                  balanceType: \"CR\",\n                  lastCommitedTransaction: \"5521\",\n                  lastChangeDateTime: \"2016-11-18T00:00:00.000+0000\",\n                  referenceDate: \"2016-11-16T00:00:00.000+0000\"\n                }\n              ]\n            },{\n            accountId: \"3601236547893232099\",\n            iban: \"7.780360123654789E767676721\",\n            name: \"REDA ADARI\",\n            details: \"CR\",\n            linkedAccount: \"7.780360123654755E21\",\n            usage: \"DB\",\n            plafond:1500,\n            cashAccountType: \"Compte courant\",\n            currency: \"MAD\",\n            product: \"GOLD\",\n            psuStatus: \"A\",\n            customerNumber: \"11111111\",\n            stoppageStatus: \"CLOSE\",\n            availableBalance: 900000,\n            ibanAccountKey: \"500\",\n            branchCode: \"780\",\n            balances: [\n              {\n                balanceId: 111,\n                accountId: \"3601236547893232\",\n                name: \"REDA ADARI\",\n                amount: 25000000,\n                currency: \"MAD\",\n                balanceType: \"CR\",\n                lastCommitedTransaction: \"5321\",\n                lastChangeDateTime: \"2016-11-16T00:00:00.000+0000\",\n                referenceDate: \"2016-11-16T00:00:00.000+0000\"\n              }\n            ]\n          },\n          {\n            accountId: \"360129874589323245\",\n            iban: \"7.560360129874589E21678\",\n            name: \"Issam Louhman\",\n            details: \"CR\",\n            linkedAccount: \"7.780360123654789E21\",\n            usage: \"CR\",\n            plafond:1500,\n            cashAccountType: \"Compte courant\",\n            currency: \"MAD\",\n            product: \"GOLD\",\n            psuStatus: \"A\",\n            customerNumber: \"11111111\",\n            stoppageStatus: \"CLOSE\",\n            availableBalance: 3008900,\n            ibanAccountKey: \"700\",\n            branchCode: \"560\",\n            balances: [\n              {\n                balanceId: 112,\n                accountId: \"3601298745893232\",\n                name: \"REDA ADARI\",\n                amount: 30000,\n                currency: \"EUR\",\n                balanceType: \"CR\",\n                lastCommitedTransaction: \"5521\",\n                lastChangeDateTime: \"2016-11-18T00:00:00.000+0000\",\n                referenceDate: \"2016-11-16T00:00:00.000+0000\"\n              }\n            ]\n          }]})\n      } else {\n        reject(new Error('errors.password.not.valid'))\n      }\n    })\n  } else {\n    return instanceAccount.get('/', {headers: {Authorization: 'Bearer ' + token}})\n      .then((response) => {\n        return response.data\n      })\n  }\n}\n\nexport const historyById =(token,accountId)=>{\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n        return  resolve({operations: [\n            {\n              test:accountId,\n              operationId: \"3601236547893232\",\n              name: \"Caffee Latte- Starbucks\",\n              date: \"20/07/2018\",\n              dateVal: \"20/07/2018\",\n              timeExact: \"08:15\",\n              balance: \"35.50\",\n              currency: \"MAD\",\n            },\n            {test:accountId,\n              operationId: \"3601236547893232\",\n              name: \"Paiement des factures d'éléctricité de l'ONEE\",\n              date: \"20/07/2018\",\n              dateVal: \"20/07/2018\",\n              timeExact: \"20:40\",\n              balance: \"322.10\",\n              currency: \"MAD\",\n            },{test:accountId,\n              operationId: \"3601236547893232\",\n              name: \"Apple iSpot - Iphone X\",\n              date: \"20/08/2018\",\n              dateVal: \"20/07/2018\",\n              timeExact: \"15:10\",\n              balance: \"1050.64\",\n              currency: \"MAD\",\n            },\n            {test:accountId,\n              operationId: \"3601236547893232\",\n              name: \"Netflix - dashboard design\",\n              date: \"20/09/2018\",\n              dateVal: \"20/07/2018\",\n              timeExact: \"23:36\",\n              balance: \"105.90\",\n              currency: \"MAD\",\n            }]})\n      } else {\n        reject(new Error('errors.password.not.valid'))\n      }\n    })\n  } else {\n    var operationId= '/'+accountId+'/operations';\n    return instanceOperations.get(operationId, {headers: {Authorization: 'Bearer ' + token}})\n      .then((response) => {\n        return response.data\n      })\n  }\n}\n\nexport const beneficiaires = (token) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n      return  resolve({ beneficiaries: [\n          {\n            beneficiaryRIB: \"147852369987456321456987\",\n            beneficiaryName: \"BENALI AHMED\",\n            beneficiaryFirstName: \"Ahmed\",\n            tel: \"06100532325\",\n            business: false\n          },\n          {\n            beneficiaryRIB: \"159951159951147856987412\",\n            beneficiaryName: \"HAMZA MAROUANE\",\n            beneficiaryFirstName: \"Hamza\",\n            tel: \"0661059898\",\n            business: false\n          }\n        ]})\n      } else {\n        reject(new Error(''))\n      }\n    })\n  } else {\n    return instanceBeneficiary.get('/beneficiaries', {headers: {Authorization: 'Bearer ' + token}})\n      .then((response) => {\n        return response.data\n      }).catch((err) => {\n        if (err.response) {\n          throw new Error(mapBeneficiaryError(err.response.data.message))\n        }\n        throw err;\n      })\n  }\n}\n\nexport const addBeneficiairy = (user,data) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n        resolve({\n              beneficiaryRIB: \"147852369987456321456987\",\n              beneficiaryName: \"BENALI AHMED\",\n              beneficiaryFirstName: \"Ahmed\",\n              tel: \"06100532325\",\n              business: false\n          })\n      } else {\n        reject(new Error(''))\n      }\n    })\n  } else {\n    let dataInput ={\n      customerNumber:user.id,\n      accountId:data.toggleSG ? data.numAccount:null,\n      beneficiaryRIB:!data.toggleSG ?data.rib:null,\n      beneficiaryName :data.typeBeneficiary==='Personne Physique'?data.lname:data.raison ,\n      beneficiaryFirstName:data.fname ,\n      tel\t:\"\",\n      business:data.typeBeneficiary==='Personne Physique'?false:true}\n    return instanceBeneficiary.post('/add',dataInput, {headers: {Authorization: 'Bearer ' + user.token}}  ).then((response) => {\n      return response.data\n    }).catch((err) => {\n      if (err.response) {\n        throw new Error(mapBeneficiaryError(err.response.data.message))\n      }\n      throw err;\n    })\n  }\n}\nexport const deleteBeneficiairy = (token,listBeneficiaries) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      console.log('data final',listBeneficiaries)\n\n      var valid =true\n      if (valid) {\n        resolve({\n          beneficiaryRIB: \"147852369987456321456987\",\n        })\n      } else {\n        reject(new Error(''))\n      }\n    })\n  } else {\n    let dataInput ={beneficiaryRIB: listBeneficiaries}\n    return instanceBeneficiary.post('/delete',dataInput,{headers: {Authorization: 'Bearer ' + token}}).then((response) => {\n      return response.data\n    }).catch((err) => {\n      if (err.response) {\n        throw new Error(mapBeneficiaryError(err.response.data.message))\n      }\n      throw err;\n    })\n  }\n}\n\nexport const chequebooks = (token,accountId) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n        return  resolve({\n          checkBookOrders: [\n            {\n              ckeckBookOrderId: \"11111111\",\n              orderDate: \"2011-01-18 00:00:00.0\",\n              type: \"cheque normal\",\n              accountId: \"3601236547893232\",\n              capacity: \"40 sheet\",\n              archived: false,\n              status: \"pending\"\n            },\n            {\n              ckeckBookOrderId: \"22222222\",\n              orderDate: \"2011-01-18 00:00:00.0\",\n              type: \"cheque normal\",\n              accountId: \"36012987458932321\",\n              capacity: \"40 sheet\",\n              archived: false,\n              status: \"pending\"\n            },\n            {\n              ckeckBookOrderId: \"33333333\",\n              orderDate: \"2011-01-18 00:00:00.0\",\n              type: \"cheque normal\",\n              accountId: \"1234567\",\n              capacity: \"20 sheet\",\n              archived: false,\n              status: \"success\"\n            }\n          ],\n          checkbookOrder: null})\n      } else {\n        reject(new Error('error'))\n      }\n    })\n  } else {\n    return instanceCheckbook.get(`/list`, {headers: {Authorization: 'Bearer ' + token}})\n      .then((response) => {\n        return response.data\n      }).catch((err) => {\n        if (err.response) {\n          throw new Error(err.response)\n        }\n        throw err;\n      })\n  }\n}\n\nexport const addChequebook = (user,data) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n        resolve({})\n      } else {\n        reject(new Error('error'))\n      }\n    })\n  } else {\n    let dataInput ={\n      accountId:data.accountChequebook ,\n      type:data.type,\n      capacity:data.typepages,\n      }\n      console.log('data',dataInput)\n    return instanceCheckbook.post('/add',dataInput, {headers: {Authorization: 'Bearer ' + user.token}}  ).then((response) => {\n      return response.data\n    }).catch((err) => {\n      if (err.response) {\n        throw new Error(err.response)\n      }\n      throw err;\n    })\n  }\n}\nexport const cancelChequebook = (user,checkbookId) => {\n  if (BOUCHON) {\n    return new Promise((resolve, reject) => {\n      var valid =true\n      if (valid) {\n        resolve({})\n      } else {\n        reject(new Error('error'))\n      }\n    })\n  } else {\n    return instanceCheckbook.get(`/${checkbookId}/cancel`, {headers: {Authorization: 'Bearer ' + user.token}}  ).then((response) => {\n      return response.data\n    }).catch((err) => {\n      if (err.response) {\n        throw new Error(err.response)\n      }\n      throw err;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}