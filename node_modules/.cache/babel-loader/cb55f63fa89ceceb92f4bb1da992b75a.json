{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\src\\\\component\\\\form\\\\Field.js\";\nimport React from 'react';\nimport { Dropdown, Form, Input, Checkbox } from 'semantic-ui-react';\nimport isEmpty from 'lodash/isEmpty';\nimport { ErrorMessage } from \"formik\";\nimport DateTime from '../timePicker';\nimport FloatedGroup from '../FloatedGroup';\nimport moment from 'moment';\nexport default (function (_ref) {\n  var type = _ref.type,\n      label = _ref.label,\n      error = _ref.error,\n      value = _ref.value,\n      setFieldValue = _ref.setFieldValue,\n      specificEvent = _ref.specificEvent,\n      props = _objectWithoutProperties(_ref, [\"type\", \"label\", \"error\", \"value\", \"setFieldValue\", \"specificEvent\"]);\n\n  var field = null;\n\n  if (type === 'select') {\n    field = React.createElement(Dropdown, {\n      placeholder: label,\n      scrolling: true,\n      fluid: true,\n      selection: true,\n      options: props.options,\n      defaultValue: props.initvalue,\n      onChange: function onChange(event, value) {\n        setFieldValue(props.name, value.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  } else if (type === 'date') {\n    field = React.createElement(DateTime, {\n      name: label,\n      value: value || moment(),\n      onChange: function onChange(e, date) {\n        setFieldValue(props.name, date.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  } else if (type === 'toggle') {\n    field = React.createElement(Checkbox, {\n      toggle: true,\n      onChange: function onChange(event, value) {\n        setFieldValue(props.name, value.checked);\n      },\n      defaultChecked: props.initvalue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  } else if (type === 'floatedGroup') {\n    field = React.createElement(FloatedGroup, {\n      data: props.elements,\n      setFieldValue: setFieldValue,\n      name: props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  } else {\n    field = React.createElement(Input, {\n      type: type,\n      value: value || '',\n      onChange: props.onChange,\n      onBlur: props.onBlur,\n      name: props.name,\n      className: props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  var hasError = !isEmpty(error);\n  return React.createElement(Form.Field, {\n    error: hasError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, label && React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, label), field, React.createElement(ErrorMessage, {\n    name: props.name,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["C:\\Users\\DIT\\Desktop\\Nouveau dossier (4)\\unibank-web\\src\\component\\form\\Field.js"],"names":["React","Dropdown","Form","Input","Checkbox","isEmpty","ErrorMessage","DateTime","FloatedGroup","moment","type","label","error","value","setFieldValue","specificEvent","props","field","options","initvalue","event","name","e","date","checked","elements","onChange","onBlur","className","hasError"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Dropdown, Form, Input,Checkbox} from 'semantic-ui-react'\nimport isEmpty from 'lodash/isEmpty'\nimport {ErrorMessage} from \"formik\";\nimport DateTime from '../timePicker'\nimport FloatedGroup from '../FloatedGroup'\n\nimport moment from 'moment'\n\nexport default ({type, label, error, value, setFieldValue, specificEvent, ...props} ) => {\n  let field = null;\n  if (type === 'select') {\n    field = <Dropdown  placeholder={label} scrolling fluid selection options={props.options} defaultValue={props.initvalue} onChange={(event, value) => {setFieldValue(props.name, value.value)}}/>\n  } else if (type === 'date') {\n    field = <DateTime name={label} value={value || moment()} onChange={(e, date) => {setFieldValue(props.name, date.value)}}/>\n  } else if (type === 'toggle') {\n    field =  <Checkbox toggle onChange={(event, value) => {setFieldValue(props.name, value.checked)}} defaultChecked ={props.initvalue} />\n  } else if (type === 'floatedGroup') {\n    field =  <FloatedGroup data={props.elements}  setFieldValue={setFieldValue} name={props.name}/>\n  } else {\n    field = <Input type={type} value={value || ''} onChange={props.onChange} onBlur={props.onBlur} name={props.name} className={props.className}/>\n  }\n  const hasError = !isEmpty(error)\n  return (\n    <Form.Field error={hasError}>\n      {label && <label>{label}</label>}\n      {field}\n      <ErrorMessage name={props.name} component=\"div\"/>\n    </Form.Field>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}