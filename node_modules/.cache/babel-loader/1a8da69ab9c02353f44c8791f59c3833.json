{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\DIT\\\\Desktop\\\\Nouveau dossier (4)\\\\unibank-web\\\\src\\\\component\\\\form\\\\index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .form-error {\\n     color: firebrick;\\n    font-weight: bold;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Form, Formik } from \"formik\";\nimport map from 'lodash/map';\nimport forEach from 'lodash/forEach';\nimport isEmpty from 'lodash/isEmpty';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport Field from \"./Field\";\nimport Button from \"../button\";\n\nvar createYupSchema = function createYupSchema(fields) {\n  var shape = {};\n  forEach(fields, function (field, name) {\n    shape[name] = Yup.string();\n\n    if (field.number) {\n      shape[name] = shape[name].matches(/^[0-9]*\\.?[0-9]+$/, 'veuillez saisir uniquement des chiffres.');\n    }\n\n    if (field.required) {\n      shape[name] = shape[name].required(field.empty_message || 'Cette information est obligatoire.');\n    }\n\n    if (field.max) {\n      shape[name] = Yup.number().max(field.max.value, field.max.error);\n    }\n\n    if (field.maxString) {\n      shape[name] = shape[name].max(field.errorCondition, field.errorMessage);\n    }\n  });\n  return Yup.object().shape(shape);\n};\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.state = {\n      globalError: null\n    };\n    var yup = createYupSchema(props.fields);\n    _this.validationSchema = {\n      validate: function validate(values, options) {\n        console.log('values', values);\n        var validation = {};\n\n        if (props.validate) {\n          validation = props.validate(values) || {};\n\n          if (!isEmpty(validation)) {\n            var yup2 = createYupSchema(validation);\n            return yup2.validate(values).then(function (res) {\n              return yup.validate(values, options);\n            });\n          }\n        }\n\n        return yup.validate(values, options);\n      }\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          initialValues = _this$props.initialValues,\n          _onSubmit = _this$props.onSubmit,\n          fields = _this$props.fields,\n          submitText = _this$props.submitText,\n          onChange = _this$props.onChange;\n      var globalError = this.state.globalError;\n      return React.createElement(FormStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validationSchema: this.validationSchema,\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n\n          _this2.setState({\n            globalError: null\n          });\n\n          _onSubmit(values).then(function () {\n            setSubmitting(false);\n          }).catch(function (err) {\n            _this2.setState({\n              globalError: err.message\n            });\n\n            setSubmitting(false);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, map(fields, function (field, name) {\n          field.value = props.values[name];\n          map(props.values, function (value, index) {\n            if (!fields.hasOwnProperty(index)) {\n              delete props.values[index];\n            }\n          });\n          return React.createElement(Field, Object.assign({\n            key: name,\n            type: field.type,\n            name: name,\n            onChange: function onChange(evt) {\n              props.handleChange(evt);\n\n              if (field.onChange) {\n                field.onChange(evt.target.value);\n              }\n            },\n            placeholder: field.label,\n            setFieldValue: function setFieldValue(name, value) {\n              props.setFieldValue(name, value);\n\n              if (field.onChange) {\n                field.onChange(value);\n              }\n            },\n            initValue: field.initvalue,\n            onBlur: props.handleBlur,\n            value: props.values[name],\n            error: props.touched[name] ? props.errors[name] : null\n          }, field, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }));\n        })), React.createElement(\"div\", {\n          className: \"form-actions mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, map(_this2.props.buttons, function (button, name) {\n          var loading = false;\n          var disabled = false;\n\n          if (name === 'submit') {\n            loading = props.isSubmitting;\n            disabled = !props.isValid || props.isSubmitting;\n          }\n\n          return React.createElement(Button, {\n            key: name,\n            type: \"submit\",\n            loading: loading,\n            disabled: disabled,\n            label: button.label,\n            onClick: button.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          });\n        })), globalError && React.createElement(\"div\", {\n          className: \"form-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, globalError)));\n      }));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };\nvar FormStyle = styled.div(_templateObject());","map":{"version":3,"sources":["C:\\Users\\DIT\\Desktop\\Nouveau dossier (4)\\unibank-web\\src\\component\\form\\index.js"],"names":["React","Form","Formik","map","forEach","isEmpty","styled","Yup","Field","Button","createYupSchema","fields","shape","field","name","string","number","matches","required","empty_message","max","value","error","maxString","errorCondition","errorMessage","object","props","state","globalError","yup","validationSchema","validate","values","options","console","log","validation","yup2","then","res","initialValues","onSubmit","submitText","onChange","setSubmitting","setState","catch","err","message","index","hasOwnProperty","type","evt","handleChange","target","label","setFieldValue","initvalue","handleBlur","touched","errors","buttons","button","loading","disabled","isSubmitting","isValid","onClick","Component","FormStyle","div"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,QAA3B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAClC,MAAMC,KAAK,GAAG,EAAd;AACAR,EAAAA,OAAO,CAACO,MAAD,EAAS,UAACE,KAAD,EAAQC,IAAR,EAAiB;AAC/BF,IAAAA,KAAK,CAACE,IAAD,CAAL,GAAcP,GAAG,CAACQ,MAAJ,EAAd;;AACA,QAAIF,KAAK,CAACG,MAAV,EAAkB;AACjBJ,MAAAA,KAAK,CAACE,IAAD,CAAL,GAAcF,KAAK,CAACE,IAAD,CAAL,CAAYG,OAAZ,CAAoB,mBAApB,EAAwC,0CAAxC,CAAd;AACA;;AACD,QAAIJ,KAAK,CAACK,QAAV,EAAoB;AAClBN,MAAAA,KAAK,CAACE,IAAD,CAAL,GAAeF,KAAK,CAACE,IAAD,CAAL,CAAYI,QAAZ,CAAqBL,KAAK,CAACM,aAAN,IAAuB,oCAA5C,CAAf;AACD;;AACD,QAAIN,KAAK,CAACO,GAAV,EAAe;AACXR,MAAAA,KAAK,CAACE,IAAD,CAAL,GAAcP,GAAG,CAACS,MAAJ,GAAaI,GAAb,CAAiBP,KAAK,CAACO,GAAN,CAAUC,KAA3B,EAAkCR,KAAK,CAACO,GAAN,CAAUE,KAA5C,CAAd;AACH;;AACD,QAAIT,KAAK,CAACU,SAAV,EAAqB;AACnBX,MAAAA,KAAK,CAACE,IAAD,CAAL,GAAeF,KAAK,CAACE,IAAD,CAAL,CAAYM,GAAZ,CAAgBP,KAAK,CAACW,cAAtB,EAAsCX,KAAK,CAACY,YAA5C,CAAf;AACD;AAEF,GAfM,CAAP;AAgBA,SAAOlB,GAAG,CAACmB,MAAJ,GAAad,KAAb,CAAmBA,KAAnB,CAAP;AACD,CAnBD;;;;;;;AA4BE,oBAAYe,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AADiB,UAJnBC,KAImB,GAJX;AACNC,MAAAA,WAAW,EAAE;AADP,KAIW;AAEjB,QAAMC,GAAG,GAAGpB,eAAe,CAACiB,KAAK,CAAChB,MAAP,CAA3B;AACA,UAAKoB,gBAAL,GAAwB;AACtBC,MAAAA,QAAQ,EAAE,kBAACC,MAAD,EAASC,OAAT,EAAqB;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBH,MAArB;AACA,YAAII,UAAU,GAAG,EAAjB;;AACA,YAAIV,KAAK,CAACK,QAAV,EAAoB;AAClBK,UAAAA,UAAU,GAAGV,KAAK,CAACK,QAAN,CAAeC,MAAf,KAA0B,EAAvC;;AACA,cAAI,CAAC5B,OAAO,CAACgC,UAAD,CAAZ,EAA0B;AACxB,gBAAMC,IAAI,GAAG5B,eAAe,CAAC2B,UAAD,CAA5B;AACA,mBAAOC,IAAI,CAACN,QAAL,CAAcC,MAAd,EAAsBM,IAAtB,CAA4B,UAACC,GAAD,EAAS;AAC1C,qBAAOV,GAAG,CAACE,QAAJ,CAAaC,MAAb,EAAqBC,OAArB,CAAP;AACD,aAFM,CAAP;AAGD;AACF;;AACD,eAAOJ,GAAG,CAACE,QAAJ,CAAaC,MAAb,EAAqBC,OAArB,CAAP;AACD;AAdqB,KAAxB;AAHiB;AAmBlB;;;;6BAGQ;AAAA;;AAAA,wBACwD,KAAKP,KAD7D;AAAA,UACAc,aADA,eACAA,aADA;AAAA,UACeC,SADf,eACeA,QADf;AAAA,UACyB/B,MADzB,eACyBA,MADzB;AAAA,UACiCgC,UADjC,eACiCA,UADjC;AAAA,UAC4CC,QAD5C,eAC4CA,QAD5C;AAAA,UAEAf,WAFA,GAEe,KAAKD,KAFpB,CAEAC,WAFA;AAGP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACA,QAAA,aAAa,EAAEY,aADf;AAEA,QAAA,gBAAgB,EAAE,KAAKV,gBAFvB;AAGA,QAAA,QAAQ,EAAE,kBAACE,MAAD,QAA6B;AAAA,cAAnBY,aAAmB,QAAnBA,aAAmB;;AACrC,UAAA,MAAI,CAACC,QAAL,CAAc;AAACjB,YAAAA,WAAW,EAAE;AAAd,WAAd;;AACAa,UAAAA,SAAQ,CAACT,MAAD,CAAR,CAAiBM,IAAjB,CAAsB,YAAM;AAC1BM,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WAFD,EAEGE,KAFH,CAES,UAACC,GAAD,EAAS;AAChB,YAAA,MAAI,CAACF,QAAL,CAAc;AAACjB,cAAAA,WAAW,EAAEmB,GAAG,CAACC;AAAlB,aAAd;;AACAJ,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WALD;AAMD,SAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYC,UAAAlB,KAAK,EAAI;AACR,eACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGxB,GAAG,CAACQ,MAAD,EAAS,UAACE,KAAD,EAAQC,IAAR,EAAiB;AAC5BD,UAAAA,KAAK,CAACQ,KAAN,GAAcM,KAAK,CAACM,MAAN,CAAanB,IAAb,CAAd;AACAX,UAAAA,GAAG,CAACwB,KAAK,CAACM,MAAP,EAAe,UAACZ,KAAD,EAAQ6B,KAAR,EAAkB;AACpC,gBAAI,CAACvC,MAAM,CAACwC,cAAP,CAAsBD,KAAtB,CAAL,EAAmC;AACjC,qBAAOvB,KAAK,CAACM,MAAN,CAAaiB,KAAb,CAAP;AACD;AACA,WAJE,CAAH;AAKA,iBACE,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAEpC,IAAZ;AACO,YAAA,IAAI,EAAED,KAAK,CAACuC,IADnB;AAEO,YAAA,IAAI,EAAEtC,IAFb;AAGO,YAAA,QAAQ,EAAE,kBAACuC,GAAD,EAAS;AACjB1B,cAAAA,KAAK,CAAC2B,YAAN,CAAmBD,GAAnB;;AACA,kBAAIxC,KAAK,CAAC+B,QAAV,EAAoB;AACnB/B,gBAAAA,KAAK,CAAC+B,QAAN,CAAeS,GAAG,CAACE,MAAJ,CAAWlC,KAA1B;AACA;AACF,aARR;AASO,YAAA,WAAW,EAAER,KAAK,CAAC2C,KAT1B;AAUO,YAAA,aAAa,EAAE,uBAAC1C,IAAD,EAAOO,KAAP,EAAiB;AAC9BM,cAAAA,KAAK,CAAC8B,aAAN,CAAoB3C,IAApB,EAA0BO,KAA1B;;AACA,kBAAIR,KAAK,CAAC+B,QAAV,EAAoB;AAClB/B,gBAAAA,KAAK,CAAC+B,QAAN,CAAevB,KAAf;AACD;AACF,aAfR;AAgBO,YAAA,SAAS,EAAER,KAAK,CAAC6C,SAhBxB;AAiBO,YAAA,MAAM,EAAE/B,KAAK,CAACgC,UAjBrB;AAkBO,YAAA,KAAK,EAAEhC,KAAK,CAACM,MAAN,CAAanB,IAAb,CAlBd;AAmBO,YAAA,KAAK,EAAEa,KAAK,CAACiC,OAAN,CAAc9C,IAAd,IAAsBa,KAAK,CAACkC,MAAN,CAAa/C,IAAb,CAAtB,GAA2C;AAnBzD,aAoBWD,KApBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAwBD,SA/BG,CADN,CADF,EAmCE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGV,GAAG,CAAC,MAAI,CAACwB,KAAL,CAAWmC,OAAZ,EAAoB,UAACC,MAAD,EAAQjD,IAAR,EAAe;AACrC,cAAIkD,OAAO,GAAG,KAAd;AACA,cAAIC,QAAQ,GAAE,KAAd;;AACA,cAAGnD,IAAI,KAAG,QAAV,EAAmB;AACjBkD,YAAAA,OAAO,GAACrC,KAAK,CAACuC,YAAd;AACAD,YAAAA,QAAQ,GAAC,CAACtC,KAAK,CAACwC,OAAP,IAAkBxC,KAAK,CAACuC,YAAjC;AACD;;AACD,iBACE,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEpD,IAAb;AAAmB,YAAA,IAAI,EAAC,QAAxB;AAAiC,YAAA,OAAO,EAAEkD,OAA1C;AAAmD,YAAA,QAAQ,EAAEC,QAA7D;AAAuE,YAAA,KAAK,EAAEF,MAAM,CAACP,KAArF;AAA4F,YAAA,OAAO,EAAEO,MAAM,CAACK,OAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,SAVG,CADN,CAnCF,EAmDGvC,WAAW,IAAI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BA,WAA7B,CAnDlB,CADF,CADA;AAwDA,OArEF,CADF,CADF;AA2ED;;;;EA1G0B7B,KAAK,CAACqE,S;;;AA4GnC,IAAMC,SAAS,GAAGhE,MAAM,CAACiE,GAAV,mBAAf","sourcesContent":["import React from 'react'\nimport {Form, Formik} from \"formik\";\nimport map from 'lodash/map'\nimport forEach from 'lodash/forEach'\nimport isEmpty from 'lodash/isEmpty'\nimport styled from 'styled-components'\nimport * as Yup from 'yup';\nimport Field from \"./Field\";\nimport Button from \"../button\";\n\n\nconst createYupSchema = (fields) => {\n  const shape = {}\n  forEach(fields, (field, name) => {\n    shape[name] = Yup.string()\n    if (field.number) {\n     shape[name] = shape[name].matches(/^[0-9]*\\.?[0-9]+$/,'veuillez saisir uniquement des chiffres.')\n    }\n    if (field.required) {\n      shape[name] =  shape[name].required(field.empty_message || 'Cette information est obligatoire.' )\n    }\n    if (field.max) {\n        shape[name] = Yup.number().max(field.max.value, field.max.error)\n    }\n    if (field.maxString) {\n      shape[name] =  shape[name].max(field.errorCondition, field.errorMessage)\n    }\n\n  })\n  return Yup.object().shape(shape)\n}\n\n\nexport default class extends React.Component {\n\n  state = {\n    globalError: null,\n  }\n\n  constructor(props) {\n    super(props);\n    const yup = createYupSchema(props.fields)\n    this.validationSchema = {\n      validate: (values, options) => {\n        console.log('values',values)\n        let validation = {}\n        if (props.validate) {\n          validation = props.validate(values) || {}\n          if (!isEmpty(validation)) {\n            const yup2 = createYupSchema(validation)\n            return yup2.validate(values).then( (res) => {\n              return yup.validate(values, options)\n            } )\n          }\n        }\n        return yup.validate(values, options) ;\n      }\n    };\n  }\n\n\n  render() {\n    const {initialValues, onSubmit, fields, submitText,onChange} = this.props;\n    const {globalError} = this.state;\n    return (\n      <FormStyle>\n        <Formik\n        initialValues={initialValues}\n        validationSchema={this.validationSchema}\n        onSubmit={(values, {setSubmitting}) => {\n          this.setState({globalError: null})\n          onSubmit(values).then(() => {\n            setSubmitting(false);\n          }).catch((err) => {\n            this.setState({globalError: err.message})\n            setSubmitting(false);\n          })\n        }}>\n        {props => {\n          return(\n          <Form>\n            <div className=\"ui form\">\n              <div className=\"form-fields\">\n                {map(fields, (field, name) => {\n                  field.value = props.values[name];\n                  map(props.values, (value, index) => {\n                  if (!fields.hasOwnProperty(index)) {\n                    delete props.values[index]\n                  }\n                  })\n                  return (\n                    <Field key={name}\n                           type={field.type}\n                           name={name}\n                           onChange={(evt) => {\n                             props.handleChange(evt)\n                             if (field.onChange) {\n                              field.onChange(evt.target.value)\n                             }\n                           }}\n                           placeholder={field.label}\n                           setFieldValue={(name, value) => {\n                             props.setFieldValue(name, value);\n                             if (field.onChange) {\n                               field.onChange(value)\n                             }\n                           }}\n                           initValue={field.initvalue}\n                           onBlur={props.handleBlur}\n                           value={props.values[name]}\n                           error={props.touched[name] ? props.errors[name] : null}\n                           {...field}\n                    />\n                  )\n                })}\n              </div>\n              <div className=\"form-actions mt-3\">\n                {map(this.props.buttons,(button,name)=>{\n                  var loading = false;\n                  var disabled =false;\n                  if(name==='submit'){\n                    loading=props.isSubmitting ;\n                    disabled=!props.isValid || props.isSubmitting;\n                  }\n                  return(\n                    <Button key={name} type=\"submit\" loading={loading} disabled={disabled} label={button.label} onClick={button.onClick} />\n                  )\n                })}\n\n                {// <Button  type=\"submit\" loading={props.isSubmitting} disabled={!props.isValid || props.isSubmitting} label={submitText} />\n                }\n                  </div>\n              {globalError && <div className=\"form-error\">{globalError}</div>}\n            </div>\n          </Form>\n        )}}\n      </Formik></FormStyle>\n\n    )\n  }\n}\nconst FormStyle = styled.div`\n  .form-error {\n     color: firebrick;\n    font-weight: bold;\n  }\n`\n\n"]},"metadata":{},"sourceType":"module"}