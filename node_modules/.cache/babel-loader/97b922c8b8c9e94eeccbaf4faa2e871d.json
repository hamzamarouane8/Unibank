{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\DIT\\\\Desktop\\\\UNIBANK\\\\unibank-web\\\\src\\\\component\\\\map\\\\index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .ui.button {\\n     position: absolute ;\\n   margin :20px\\nbottom:0  }\\n  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { GoogleMap, withGoogleMap } from \"react-google-maps\";\nimport Mark from './marker';\nimport Button from '../button';\nimport withScriptjs from 'react-google-maps/lib//withScriptjs';\nimport Search from '../search';\nimport styled from \"styled-components\";\nvar refs = {\n  map: undefined\n};\nvar predefinedLocations = [];\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this.handleToggleOpen = function (marker) {\n      _this.setState({\n        activeMarker: marker\n      });\n    };\n\n    _this.handleToggleClose = function () {\n      _this.setState({\n        activeMarker: null\n      });\n    };\n\n    _this.state = {\n      activeMarker: null,\n      googleMap: null,\n      center: null,\n      markers: null\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      predefinedLocations = this.props.markers;\n    }\n  }, {\n    key: \"onMapMounted\",\n    value: function onMapMounted(ref) {\n      refs.map = ref;\n    }\n  }, {\n    key: \"calcDistance\",\n    value: function calcDistance(p1, p2) {\n      return (window.google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);\n    }\n  }, {\n    key: \"fetchPlaces\",\n    value: function fetchPlaces() {\n      var list = [];\n      var google = window.google;\n      var bounds = refs.map.getBounds(); // var centerlat = (bounds.la.j + bounds.la.l)/2\n      //var centerlng = (bounds.ea.j + bounds.ea.l)/2\n\n      var centerlat = (bounds.ma.j + bounds.ma.l) / 2;\n      var centerlng = (bounds.fa.j + bounds.fa.l) / 2;\n      var lat = centerlat;\n      var lng = centerlng;\n      var p1, p2;\n      predefinedLocations.forEach(function (obj) {\n        p1 = new google.maps.LatLng(obj.latitude, obj.longitude);\n        p2 = new google.maps.LatLng(lat, lng);\n        var distance = (window.google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);\n        obj.distance = distance < 4 ? distance : '';\n      });\n      list = predefinedLocations.filter(function (elt) {\n        return elt.distance !== '';\n      });\n      this.setState({\n        markers: list\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          distance = _this$props.distance,\n          zoom = _this$props.zoom,\n          defaultCenter = _this$props.defaultCenter;\n      return React.createElement(ButtonStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(GoogleMap, {\n        defaultZoom: zoom,\n        defaultCenter: defaultCenter,\n        ref: this.onMapMounted,\n        onBoundsChanged: this.fetchPlaces.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Search, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Button, {\n        nameIcon: \"filter\",\n        id: \"ui-filter\",\n        icon: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), (this.state.markers || []).map(function (item, i) {\n        //if(item.distance<distance){\n        return React.createElement(Mark, {\n          key: i,\n          position: {\n            lat: parseFloat(item.latitude),\n            lng: parseFloat(item.longitude)\n          },\n          open: _this2.state.activeMarker === item,\n          onClick: function onClick() {\n            return _this2.handleToggleOpen(item);\n          },\n          closeInfo: function closeInfo() {\n            return _this2.handleToggleClose();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, _this2.props.infoWindow(item));\n      } //}\n      )));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default withScriptjs(withGoogleMap(Map));\nvar ButtonStyle = styled.div(_templateObject());","map":{"version":3,"sources":["C:\\Users\\DIT\\Desktop\\UNIBANK\\unibank-web\\src\\component\\map\\index.js"],"names":["React","Component","GoogleMap","withGoogleMap","Mark","Button","withScriptjs","Search","styled","refs","map","undefined","predefinedLocations","Map","props","handleToggleOpen","marker","setState","activeMarker","handleToggleClose","state","googleMap","center","markers","ref","p1","p2","window","google","maps","geometry","spherical","computeDistanceBetween","toFixed","list","bounds","getBounds","centerlat","ma","j","l","centerlng","fa","lat","lng","forEach","obj","LatLng","latitude","longitude","distance","filter","elt","zoom","defaultCenter","onMapMounted","fetchPlaces","bind","item","i","parseFloat","infoWindow","ButtonStyle","div"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {GoogleMap, withGoogleMap} from \"react-google-maps\"\nimport Mark from './marker'\nimport Button from '../button'\nimport withScriptjs from 'react-google-maps/lib//withScriptjs';\nimport Search from '../search'\nimport styled from \"styled-components\";\nconst refs = {map: undefined}\nvar predefinedLocations = [];\n\nclass Map extends Component {\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      activeMarker: null,\n      googleMap:null,\n      center:null,\n      markers:null\n    }\n}\n\ncomponentDidMount() {\n  predefinedLocations= this.props.markers\n}\n\nhandleToggleOpen = (marker) => {\n    this.setState({\n      activeMarker: marker\n    });\n}\nhandleToggleClose = () => {\n    this.setState({\n      activeMarker: null\n    });\n}\nonMapMounted(ref){\n    refs.map = ref\n}\n\ncalcDistance(p1, p2) {\n  return (window.google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);\n}\n\nfetchPlaces(){\n  let list = [];\n  const google = window.google;\n  const bounds = refs.map.getBounds();\n // var centerlat = (bounds.la.j + bounds.la.l)/2\n  //var centerlng = (bounds.ea.j + bounds.ea.l)/2\n  var centerlat = (bounds.ma.j + bounds.ma.l)/2\n  var centerlng = (bounds.fa.j + bounds.fa.l)/2\n  var lat = centerlat;\n  var lng = centerlng;\n  var p1, p2;\n  predefinedLocations.forEach(function(obj) {\n    p1 = new google.maps.LatLng(obj.latitude, obj.longitude);\n    p2 = new google.maps.LatLng(lat, lng);\n    var distance = (window.google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);\n    obj.distance = distance< 4 ? distance : '' ;\n  });\n  list = predefinedLocations.filter((elt) => elt.distance !== '')\n  this.setState({\n    markers: list\n  });\n}\n\n  render() {\n    const {distance,zoom,defaultCenter} = this.props\n    return (\n    <ButtonStyle>\n      <GoogleMap\n        defaultZoom={zoom}\n        defaultCenter={defaultCenter}\n        ref={this.onMapMounted}\n        onBoundsChanged={this.fetchPlaces.bind(this)}>\n        <Search />\n        <Button nameIcon=\"filter\" id=\"ui-filter\" icon=\"icon\"/>\n        {(this.state.markers || []).map((item, i) => {\n          //if(item.distance<distance){\n          return (\n            <Mark key={i} position={{lat: parseFloat(item.latitude), lng: parseFloat(item.longitude)}}\n                  open={this.state.activeMarker === item}\n                  onClick={() => this.handleToggleOpen(item)}\n                  closeInfo={()=>this.handleToggleClose()}\n                  >\n              {this.props.infoWindow(item)}\n            </Mark>\n          )}\n        //}\n        )}\n      </GoogleMap>\n  </ButtonStyle>\n    );\n  }\n}\nexport default withScriptjs(withGoogleMap(Map));\n\nconst ButtonStyle = styled.div`\n  .ui.button {\n     position: absolute ;\n   margin :20px\nbottom:0  }\n  \n`\n"]},"metadata":{},"sourceType":"module"}