"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _moment = _interopRequireDefault(require("moment"));

var _Calendar = _interopRequireDefault(require("./Calendar"));

var _Header = _interopRequireDefault(require("./CalendarHeader/Header"));

var _Body = _interopRequireDefault(require("./CalendarBody/Body"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HOUR_CALENDAR_ROW_WIDTH = '4';

function HourView(props) {
  var hours = props.hours,
      hasHeader = props.hasHeader,
      onHourClick = props.onHourClick,
      onNextPageBtnClick = props.onNextPageBtnClick,
      onPrevPageBtnClick = props.onPrevPageBtnClick,
      hasPrevPage = props.hasPrevPage,
      hasNextPage = props.hasNextPage,
      onHeaderClick = props.onHeaderClick,
      disabled = props.disabled,
      active = props.active,
      currentDate = props.currentDate;
  var headerProps = {
    onNextPageBtnClick: onNextPageBtnClick,
    onPrevPageBtnClick: onPrevPageBtnClick,
    hasPrevPage: hasPrevPage,
    hasNextPage: hasNextPage,
    onHeaderClick: onHeaderClick,
    title: currentDate,
    width: HOUR_CALENDAR_ROW_WIDTH,
    displayWeeks: false
  };
  return _react.default.createElement(_Calendar.default, null, hasHeader && _react.default.createElement(_Header.default, headerProps), _react.default.createElement(_Body.default, {
    data: hours,
    width: HOUR_CALENDAR_ROW_WIDTH,
    onCellClick: onHourClick,
    active: active,
    disabled: disabled
  }));
}

HourView.handledProps = ["active", "currentDate", "disabled", "hasHeader", "hasNextPage", "hasPrevPage", "hours", "onHeaderClick", "onHourClick", "onNextPageBtnClick", "onPrevPageBtnClick"];
HourView.propTypes = {
  /** Array of hours to fill a calendar with. */
  hours: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,

  /** Wether to display header or not. */
  hasHeader: _propTypes.default.bool.isRequired,

  /** Called after click on hour. */
  onHourClick: _propTypes.default.func.isRequired,

  /** Called after click on next page button. */
  onNextPageBtnClick: _propTypes.default.func,

  /** Called after click on previous page button. */
  onPrevPageBtnClick: _propTypes.default.func,

  /** Whether to display previous page button as active or disabled. */
  hasPrevPage: _propTypes.default.bool,

  /** Whether to display next page button as active or disabled. */
  hasNextPage: _propTypes.default.bool,

  /** Called after click on calendar header. */
  onHeaderClick: _propTypes.default.func,

  /** Array of hour indexes to display as disabled. */
  disabled: _propTypes.default.arrayOf(_propTypes.default.number),

  /** Hour index to display as active. */
  active: _propTypes.default.number,

  /** Date that is displayed in calendar header. */
  currentDate: _propTypes.default.string
};
var _default = HourView;
exports.default = _default;